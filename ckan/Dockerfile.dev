FROM openknowledge/ckan-dev:2.8

LABEL maintainer="Andrew Watkins <andrew.watkins@plantandfood.co.nz>"
RUN apk add --no-cache openldap-dev ssmtp 
ADD ssmtp.conf /etc/ssmtp

# debug tools for LDAP
# RUN apk add openldap-dev 

# Install CKAN extensions
RUN pip install ckantoolkit && \
    pip install ckanapi && \
    pip install ckanext_scheming && \
    pip install ckanext-pdfview

RUN pip install -e git+https://github.com/NaturalHistoryMuseum/ckanext-ldap.git@ckan-upgrade-2.8.0a#egg=ckanext-ldap
RUN pip install -r https://raw.githubusercontent.com/NaturalHistoryMuseum/ckanext-ldap/master/requirements.txt

# install PFR language file for collections
RUN pip install -e git+https://github.com/avowkind/ckanext-en-pfr.git#egg=ckanext-en-pfr
RUN cp -r /srv/app/src/ckanext-en-pfr/en_PFR/* /srv/app/src/ckan/ckan/i18n/en_AU

# COPY default production.ini file.
ADD production.ini /srv/app/

# Clone the extension(s) your are writing for your own project in the `src` folder
# to get them mounted in this image at runtime

# Apply any patches needed to CKAN core or any of the built extensions (not the
# runtime mounted ones)
# See https://github.com/okfn/docker-ckan#applying-patches

# uncomment the following if there are patches.
# COPY patches ${APP_DIR}/patches

# RUN for d in $APP_DIR/patches/*; do \
#        if [ -d $d ]; then \
#            for f in `ls $d/*.patch | sort -g`; do \
#                cd $SRC_DIR/`basename "$d"` && echo "$0: Applying patch $f to $SRC_DIR/`basename $d`"; patch -p1 < "$f" ; \
#            done ; \
#        fi ; \
#    done
